<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <RootNamespace>UPC.DotNet</RootNamespace>
        <Authors>Lunar</Authors>
        <AssemblyName>UPC.DotNet</AssemblyName>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(RunConfiguration)' == 'UPC' " />
    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="6.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.4" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />

        <PackageReference Include="Serilog.AspNetCore" Version="5.0.0" />
        <PackageReference Include="Serilog.Exceptions" Version="8.1.0" />
        <PackageReference Include="Serilog.Sinks.Map" Version="1.0.2" />
        <PackageReference Include="Serilog.Sinks.Seq" Version="5.1.1" />
        <PackageReference Include="Serilog.Enrichers.Environment" Version="2.2.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <Content Update="wwwroot\config.json">
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="Controllers\CancelController.cs" />
        <Compile Remove="Controllers\IpnController.cs" />
        <Compile Remove="Controllers\ResultController.cs" />
    </ItemGroup>

    <ItemGroup>
        <Folder Include="ClientApp\src\app\router\" />
        <Folder Include="ClientApp\src\assets\image\" />
        <Folder Include="ClientApp\src\assets\i18n\" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="Pages\Error.cshtml" />
      <_ContentIncludedByDefault Remove="Pages\_ViewImports.cshtml" />
      <_ContentIncludedByDefault Remove="ClientApp\src\config\config.json" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\UPC-Api\UPC-Api.csproj">
          <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ProjectReference>
    </ItemGroup>

<!--    <ItemGroup>-->
<!--      <ProjectReference Include="..\UPC-Api\UPC-Api.csproj">-->
<!--          <ExcludeFromSingleFile>true</ExcludeFromSingleFile>-->
<!--      </ProjectReference>-->
<!--    </ItemGroup>-->

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
